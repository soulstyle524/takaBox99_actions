name: Android Stable Build

on:
  workflow_dispatch: # 允许手动触发

jobs:
  android-build:
    runs-on: ubuntu-latest
    timeout-minutes: 30 # 防止卡死

    steps:
      # --------------------- 第1步：代码检出 ---------------------
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1 # 只拉取最新提交加速克隆

      # --------------------- 第2步：Java环境 ---------------------
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle' # 启用缓存加速

      # --------------------- 第3步：克隆目标仓库 ---------------------
      - name: Clone Target Project
        env:
          PROJECT_URL: https://github.com/soulstyle524/TVBoxOSC-.git # 替换为你的实际URL
        run: |
          # 防错1：检查URL有效性
          if [[ ! $PROJECT_URL =~ ^https://github.com/.*\.git$ ]]; then
            echo "::error::项目URL格式错误: $PROJECT_URL"
            exit 1
          fi

          # 防错2：避免重复克隆
          if [ -d "project" ]; then
            rm -rf project
          fi

          git clone --depth 1 --branch main "$PROJECT_URL" project || {
            echo "::error::仓库克隆失败，请检查权限或分支是否存在"
            exit 1
          }

      # --------------------- 第4步：修复模块权限 ---------------------
      - name: Fix Java Module Access
        working-directory: ./project
        run: |
          # 允许反射访问核心模块
          echo "org.gradle.jvmargs=--add-opens java.base/java.io=ALL-UNNAMED" >> gradle.properties
          echo "org.gradle.jvmargs=--add-opens java.base/java.lang=ALL-UNNAMED" >> gradle.properties

      # --------------------- 第5步：Gradle缓存清理 ---------------------
      - name: Clean Gradle Cache
        run: |
          # 防止旧缓存导致构建失败
          rm -rf ~/.gradle/caches/
          rm -rf ./project/.gradle/

      # --------------------- 第6步：构建调试 ---------------------
      - name: Build with Debug Mode
        working-directory: ./project
        run: |
          # 确保gradlew可执行
          chmod +x gradlew || true

          # 生成调试日志文件
          ./gradlew assembleDebug \
            --stacktrace \
            --no-daemon \
            --scan \ # 生成详细报告
            --debug > build.log 2>&1 || {
              echo "::error::构建失败，查看日志摘要:"
              grep -iE 'error|fail|exception' build.log
              exit 1
            }

      # --------------------- 第7步：上传产物 ---------------------
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: |
            ./project/**/build/outputs/apk/**/*.apk
            ./project/build.log # 包含完整日志
          if-no-files-found: error # 无文件时报错
          retention-days: 3
